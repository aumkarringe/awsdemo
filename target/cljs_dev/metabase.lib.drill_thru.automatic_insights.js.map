{"version":3,"sources":["metabase/lib/drill_thru/automatic_insights.cljc"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA;;;;;;;;;;;;;;sEAAA,iGAAAA,vKAASI,oJASNC,MACAC;AAVH,AAAA,IAAAL,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;aAAA,AAAAE,4CAAAF,eAAA,pEAWWM;iBAXX,AAAAJ,4CAAAF,eAAA,xEAWkBO;iBAXlB,AAAAL,4CAAAF,eAAA,xEAW6BQ;YAX7B,AAAAN,4CAAAF,eAAA,nEAWwCS;AAXxC,AAYE,oBAAM,iBAAAC,oBAAK,AAACC,iDAAkCP,MAAMC;AAA9C,AAAA,GAAAK;AAAA,IAAAA,wBAEK,EAAI,AAACE,cAAIN,aAAQ,GAAA,UAAA,TAAOG;AAF7B,AAAA,GAAAC;AAAA,IAAAA,wBAGK,oCAAA,pCAACG,8BAAqBT;AAH3B,AAAA,oBAAAM;AAIK,OAACI,oBAAUN;;AAJhBE;;;AAAAA;;;AAAAA;;;AAAN,AAAA,kDAAA,0DAAA,6GAAA,qDAAA,kGAAA,4EAAA,XAOeH,4EACAC;;AARf;;;AAUF,AAAAO,6FAAA,kGAAA;mCACGX,MAAMY,cAAcC,WAAaC;AADpC,qJAIMd,1EAEA,gFAAA,wEAAA,xJAACe,qFAA+BC,hKAEhC,OAACC,4RAA2DJ;;yBAP/Db,MAAMY,cAAcC;IAAaC;;;;EAAAA;;oCAAjCd,MAAMY,cAAcC,WAAaC;;;IAAjCd;;IAAMY;;IAAcC;IAAaC;0BAAjCd,MAAMY,cAAcC,WAAaC","names":["p__79104","map__79105","cljs.core/--destructure-map","cljs.core.get","metabase.lib.drill-thru.automatic-insights/automatic-insights-drill","query","stage-number","column","column-ref","dimensions","value","and__5000__auto__","metabase.lib.drill-thru.common/mbql-stage?","cljs.core/not","metabase.lib.metadata/setting","cljs.core/not-empty","metabase.lib.drill-thru.common/drill-thru-method","_stage-number","drill-thru","_","metabase.lib.util.update_query_stage","cljs.core/dissoc","metabase.lib.drill-thru.underlying-records/drill-underlying-records"],"sourcesContent":["(ns metabase.lib.drill-thru.automatic-insights\n  (:require\n   [metabase.lib.drill-thru.common :as lib.drill-thru.common]\n   [metabase.lib.drill-thru.underlying-records :as lib.drill-thru.underlying-records]\n   [metabase.lib.metadata :as lib.metadata]\n   [metabase.lib.schema :as lib.schema]\n   [metabase.lib.schema.drill-thru :as lib.schema.drill-thru]\n   [metabase.lib.util :as lib.util]\n   [metabase.util.malli :as mu]))\n\n(mu/defn automatic-insights-drill :- [:maybe ::lib.schema.drill-thru/drill-thru]\n  \"Automatic insights appears:\n  - When clicking on a value with a breakout - eg. a point in a time series, a cell of a table, a bar or pie slice\n  - Or when clicking a pivot cell, with a value but no column.\n  - Or when clicking a chart legend, in which case there's no column or value set.\n  - There must be at least 1 breakout\n  - X-rays must be enabled (check the settings)\n\n  There are two forms: X-ray, and \\\"Compare to the rest\\\". This is a simple user choice and does not need extra data.\"\n  [query                                        :- ::lib.schema/query\n   stage-number                                 :- :int\n   {:keys [column column-ref dimensions value]} :- ::lib.schema.drill-thru/context]\n  (when (and (lib.drill-thru.common/mbql-stage? query stage-number)\n             ;; Column with no value is not allowed - that's a column header click. Other combinations are allowed.\n             (or (not column) (some? value))\n             (lib.metadata/setting query :enable-xrays)\n             (not-empty dimensions))\n    {:lib/type   :metabase.lib.drill-thru/drill-thru\n     :type       :drill-thru/automatic-insights\n     :column-ref column-ref\n     :dimensions dimensions}))\n\n(defmethod lib.drill-thru.common/drill-thru-method :drill-thru/automatic-insights\n  [query _stage-number drill-thru & _]\n  ;; Returns a dummy query with the right filters for the underlying query. Rather than using this query directly, the\n  ;; FE logic for this drill will grab the filters and build a URL with them.\n  (-> query\n      ;; Drop any existing filters so they aren't duplicated.\n      (lib.util/update-query-stage -1 dissoc :filters)\n      ;; Then transform the aggregations and selected breakouts into filters.\n      (lib.drill-thru.underlying-records/drill-underlying-records drill-thru)))\n"]}