{"version":3,"sources":["metabase/legacy_mbql/predicates.cljc"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA;;;AAA4BA,sDAE1B,uCAAA,vCAACC;AAEH;;;AAAoCC,+CAElC,AAACD,uCAAaE;AAEhB;;;AAAqCC,gDAEnC,AAACH,uCAAaI;AAEhB;;;AAAqCC,4DAEnC,AAACL,uCAAaM;AAEhB;;;AAAoCC,8DAElC,uCAAA,vCAACP","names":["metabase.legacy-mbql.predicates/DateTimeUnit?","metabase.util.malli.registry/validator","metabase.legacy-mbql.predicates/Field?","metabase.legacy-mbql.schema/Field","metabase.legacy-mbql.predicates/Filter?","metabase.legacy-mbql.schema/Filter","metabase.legacy-mbql.predicates/DatetimeExpression?","metabase.legacy-mbql.schema/DatetimeExpression","metabase.legacy-mbql.predicates/FieldOrExpressionDef?"],"sourcesContent":["(ns metabase.legacy-mbql.predicates\n  \"Predicate functions for checking whether something is a valid instance of a given MBQL clause.\"\n  (:require\n   [metabase.legacy-mbql.schema :as mbql.s]\n   [metabase.lib.schema.temporal-bucketing :as lib.schema.temporal-bucketing]\n   [metabase.util.malli.registry :as mr]))\n\n(def ^{:arglists '([unit])} DateTimeUnit?\n  \"Is `unit` a valid datetime bucketing unit?\"\n  (mr/validator ::lib.schema.temporal-bucketing/unit))\n\n(def ^{:arglists '([field-clause])} Field?\n  \"Is this a valid Field clause?\"\n  (mr/validator mbql.s/Field))\n\n(def ^{:arglists '([filter-clause])} Filter?\n  \"Is this a valid `:filter` clause?\"\n  (mr/validator mbql.s/Filter))\n\n(def ^{:arglists '([filter-clause])} DatetimeExpression?\n  \"Is this a valid DatetimeExpression clause?\"\n  (mr/validator mbql.s/DatetimeExpression))\n\n(def ^{:arglists '([field-clause])} FieldOrExpressionDef?\n  \"Is this a something that is valid as a top-level expression definition?\"\n  (mr/validator ::mbql.s/FieldOrExpressionDef))\n"]}