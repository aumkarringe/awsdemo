{"version":3,"sources":["metabase/lib/drill_thru/compare_aggregations.cljc"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA;;;;;;;0EAAA,qGAAAA,/KAASI,4JAENC,MACAC;AAHH,AAAA,IAAAL,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;aAAA,AAAAE,4CAAAF,eAAA,pEAIWM;YAJX,AAAAJ,4CAAAF,eAAA,nEAIkBO;AAJlB,AAKE,oBAAM,iBAAAC,oBAAKF;AAAL,AAAA,oBAAAE;AAAA,8BAAA,rBACK,UAAA,TAAMD,sBACN,AAACE,iDAAkCL,MAAMC,mBACzC,iJAAA,jJAACK,6CAAE,AAAA,4FAAaJ;;AAHrBE;;;AAAN,AAAA,kDAAA,0DAAA,6GAAA,qDAAA,wGAAA,mEAMgB,AAACG,6CAAoCP,MAAMC,aAAa,AAAA,sGAAkBC;;AAN1F;;;AAQF,AAAAM,6FAAA,wGAAA;mCACGC,OAAOC,cAAcC,OAASC;AADjC,AAEE,MAAO,gDAAA,iFAAA,jIAACC;;yBADPJ,OAAOC,cAAcC;IAASC;;;;EAAAA;;oCAA9BH,OAAOC,cAAcC,OAASC;;;IAA9BH;;IAAOC;;IAAcC;IAASC;0BAA9BH,OAAOC,cAAcC,OAASC","names":["p__79064","map__79065","cljs.core/--destructure-map","cljs.core.get","metabase.lib.drill-thru.compare-aggregations/compare-aggregations-drill","query","stage-number","column","value","and__5000__auto__","metabase.lib.drill-thru.common/mbql-stage?","cljs.core._EQ_","metabase.lib.aggregation/resolve-aggregation","metabase.lib.drill-thru.common/drill-thru-method","_query","_stage-number","_drill","_args","cljs.core.ex_info"],"sourcesContent":["(ns metabase.lib.drill-thru.compare-aggregations\n  \"Adds 1 or more offset()-based aggregations.\n\n  Entry points:\n\n  - Column header\n\n  Query transformation:\n\n  - Adds 1 or more aggregations that compare the clicked column over time.\"\n  (:require\n   [metabase.lib.aggregation :as lib.aggregation]\n   [metabase.lib.drill-thru.common :as lib.drill-thru.common]\n   [metabase.lib.schema :as lib.schema]\n   [metabase.lib.schema.drill-thru :as lib.schema.drill-thru]\n   [metabase.util.malli :as mu]))\n\n(mu/defn compare-aggregations-drill :- [:maybe ::lib.schema.drill-thru/drill-thru.compare-aggregations]\n  \"Column clicks on aggregated columns.\"\n  [query                  :- ::lib.schema/query\n   stage-number           :- :int\n   {:keys [column value]} :- ::lib.schema.drill-thru/context]\n  (when (and column\n             (nil? value)\n             (lib.drill-thru.common/mbql-stage? query stage-number)\n             (= (:lib/source column) :source/aggregations))\n    {:lib/type    :metabase.lib.drill-thru/drill-thru\n     :type        :drill-thru/compare-aggregations\n     :aggregation (lib.aggregation/resolve-aggregation query stage-number (:lib/source-uuid column))}))\n\n(defmethod lib.drill-thru.common/drill-thru-method :drill-thru/compare-aggregations\n  [_query _stage-number _drill & _args]\n  (throw (ex-info \"Do not call drill-thru for compare-aggregations; add the aggregations directly\" {})))\n"]}