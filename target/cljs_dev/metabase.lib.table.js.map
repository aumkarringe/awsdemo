{"version":3,"sources":["metabase/lib/table.cljc"],"mappings":"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","names":["metabase.lib.metadata.calculation/display-name-method","_query","_stage-number","table-metadata","_style","or__5002__auto__","G__79830","metabase.util.humanization/name->human-readable-name","metabase.lib.metadata.calculation/metadata-method","metabase.lib.metadata.calculation/describe-top-level-key-method","query","stage-number","_k","map__79835","cljs.core/--destructure-map","cljs.core.get","source-table","metabase.lib.util/query-stage","js/Error","cljs.core/integer?","metabase.shared.util.i18n.js_i18n","cljs.core.pr_str","temp__5804__auto__","metabase.lib.metadata/table","metabase.lib.metadata.calculation.display_name","metabase.lib.table/remove-hidden-default-fields","field-metadatas","cljs.core.remove","p__79836","map__79837","visibility-type","active?","_field-metadata","G__79839","fexpr__79838","G__79840","cljs.core.keyword","metabase.lib.table/sort-default-fields","cljs.core.sort_by","p__79841","map__79842","field-name","position","metabase.util/lower-case-en","metabase.lib.metadata.calculation/returned-columns-method","p__79843","map__79844","unique-name-fn","_options","metabase.lib.metadata/fields","cljs.core.map","col","cljs.core.assoc","G__79845"],"sourcesContent":["(ns metabase.lib.table\n  (:require\n   [metabase.lib.metadata :as lib.metadata]\n   [metabase.lib.metadata.calculation :as lib.metadata.calculation]\n   [metabase.lib.util :as lib.util]\n   [metabase.shared.util.i18n :as i18n]\n   [metabase.util :as u]\n   [metabase.util.humanization :as u.humanization]))\n\n(defmethod lib.metadata.calculation/display-name-method :metadata/table\n  [_query _stage-number table-metadata _style]\n  (or (:display-name table-metadata)\n      (some->> (:name table-metadata)\n               (u.humanization/name->human-readable-name :simple))))\n\n(defmethod lib.metadata.calculation/metadata-method :metadata/table\n  [_query _stage-number table-metadata]\n  table-metadata)\n\n(defmethod lib.metadata.calculation/describe-top-level-key-method :source-table\n  [query stage-number _k]\n  (let [{:keys [source-table]} (lib.util/query-stage query stage-number)]\n    (when source-table\n      (assert (integer? source-table)\n              (i18n/tru \"Unexpected source table ID {0}\" (pr-str source-table)))\n      (or (when-let [table-metadata (lib.metadata/table query source-table)]\n            (lib.metadata.calculation/display-name query stage-number table-metadata :long))\n          (i18n/tru \"Table {0}\" (pr-str source-table))))))\n\n(defn- remove-hidden-default-fields\n  \"Remove Fields that shouldn't be visible from the default Fields for a source Table.\n  See [[metabase.query-processor.middleware.add-implicit-clauses/table->sorted-fields*]].\"\n  [field-metadatas]\n  (remove (fn [{:keys [visibility-type], active? :active, :as _field-metadata}]\n            (or (false? active?)\n                (#{:sensitive :retired} (some-> visibility-type keyword))))\n          field-metadatas))\n\n(defn- sort-default-fields\n  \"Sort default Fields for a source Table. See [[metabase.models.table/field-order-rule]].\"\n  [field-metadatas]\n  (sort-by (fn [{field-name :name, :keys [position], :as _field-metadata}]\n             [(or position 0) (u/lower-case-en (or field-name \"\"))])\n           field-metadatas))\n\n(defmethod lib.metadata.calculation/returned-columns-method :metadata/table\n  [query _stage-number table-metadata {:keys [unique-name-fn], :as _options}]\n  (when-let [field-metadatas (lib.metadata/fields query (:id table-metadata))]\n    (->> field-metadatas\n         remove-hidden-default-fields\n         sort-default-fields\n         (map (fn [col]\n                (assoc col\n                       :lib/source               :source/table-defaults\n                       :lib/source-column-alias  (:name col)\n                       :lib/desired-column-alias (unique-name-fn (or (:name col) \"\"))))))))\n"]}