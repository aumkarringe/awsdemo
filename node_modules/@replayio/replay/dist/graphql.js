"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.query = void 0;
const debug_1 = __importDefault(require("./debug"));
const node_fetch_1 = __importDefault(require("node-fetch"));
const utils_1 = require("./utils");
const debug = (0, debug_1.default)("replay:cli:graphql");
function query(name_1, query_1) {
    return __awaiter(this, arguments, void 0, function* (name, query, variables = {}, apiKey) {
        const options = {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                "User-Agent": (0, utils_1.getUserAgent)(),
            },
            body: JSON.stringify({
                query,
                name,
                variables,
            }),
        };
        if (apiKey) {
            options.headers.Authorization = `Bearer ${apiKey.trim()}`;
        }
        const server = process.env.REPLAY_API_SERVER || "https://api.replay.io";
        debug("Querying %s over %s graphql endpoint", name, server);
        const result = yield (0, node_fetch_1.default)(`${server}/v1/graphql`, options);
        const json = yield result.json();
        debug("GraphQL Response: %O", json);
        return json;
    });
}
exports.query = query;
//# sourceMappingURL=graphql.js.map