"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.formatAllRecordingsJson = exports.formatAllRecordingsHumanReadable = void 0;
/*
 * This module is responsible for formatting recordings that are going to be printed to the console.
 */
const text_table_1 = __importDefault(require("text-table"));
const generateDefaultTitle_1 = require("../generateDefaultTitle");
const MsPerSecond = 1000;
const MsPerMinute = MsPerSecond * 60;
const MsPerHour = MsPerMinute * 60;
const MsPerDay = MsPerHour * 24;
function formatTime(time) {
    const fmt = new Intl.RelativeTimeFormat("en", {
        style: "long",
    });
    const ds = Date.now() - time.getTime();
    if (ds < MsPerMinute) {
        return fmt.format(Math.round(-ds / MsPerSecond), "second");
    }
    else if (ds < MsPerHour) {
        return fmt.format(Math.round(-ds / MsPerMinute), "minute");
    }
    else if (ds < MsPerDay) {
        return fmt.format(Math.round(-ds / MsPerHour), "hour");
    }
    return fmt.format(Math.round(-ds / MsPerDay), "day");
}
function formatAllRecordingsHumanReadable(recordings) {
    // sort by created at date
    recordings.sort((a, b) => {
        return b.createTime.getTime() - a.createTime.getTime();
    });
    const formattedRecordings = recordings.map(recording => {
        var _a;
        const title = typeof ((_a = recording.metadata) === null || _a === void 0 ? void 0 : _a.title) === "string"
            ? recording.metadata.title
            : (0, generateDefaultTitle_1.generateDefaultTitle)(recording.metadata);
        return [recording.id, recording.status, title || "", formatTime(recording.createTime)];
    });
    const tableBody = [
        ["ID", "Status", "Title", "Created"],
        ...formattedRecordings,
    ];
    return (0, text_table_1.default)(tableBody);
}
exports.formatAllRecordingsHumanReadable = formatAllRecordingsHumanReadable;
function formatAllRecordingsJson(recordings) {
    return JSON.stringify(recordings, null, 2);
}
exports.formatAllRecordingsJson = formatAllRecordingsJson;
//# sourceMappingURL=formatRecordings.js.map