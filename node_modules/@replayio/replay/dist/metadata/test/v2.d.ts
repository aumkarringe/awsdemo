import { Infer } from "superstruct";
declare const testError: import("superstruct").Struct<{
    name: string;
    message: string;
    line?: number | undefined;
    column?: number | undefined;
}, {
    name: import("superstruct").Struct<string, null>;
    message: import("superstruct").Struct<string, null>;
    line: import("superstruct").Struct<number | undefined, null>;
    column: import("superstruct").Struct<number | undefined, null>;
}>;
declare const userActionEvent: import("superstruct").Struct<{
    data: {
        id: string;
        parentId: string | null;
        error: {
            name: string;
            message: string;
            line?: number | undefined;
            column?: number | undefined;
        } | null;
        command: {
            name: string;
            arguments: string[];
        };
        category: "assertion" | "command" | "other";
        scope: string[] | null;
    };
}, {
    data: import("superstruct").Struct<{
        id: string;
        parentId: string | null;
        error: {
            name: string;
            message: string;
            line?: number | undefined;
            column?: number | undefined;
        } | null;
        command: {
            name: string;
            arguments: string[];
        };
        category: "assertion" | "command" | "other";
        scope: string[] | null;
    }, {
        id: import("superstruct").Struct<string, null>;
        parentId: import("superstruct").Struct<string | null, null>;
        category: import("superstruct").Struct<"assertion" | "command" | "other", {
            assertion: "assertion";
            command: "command";
            other: "other";
        }>;
        command: import("superstruct").Struct<{
            name: string;
            arguments: string[];
        }, {
            arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
            name: import("superstruct").Struct<string, null>;
        }>;
        scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
        error: import("superstruct").Struct<{
            name: string;
            message: string;
            line?: number | undefined;
            column?: number | undefined;
        } | null, {
            name: import("superstruct").Struct<string, null>;
            message: import("superstruct").Struct<string, null>;
            line: import("superstruct").Struct<number | undefined, null>;
            column: import("superstruct").Struct<number | undefined, null>;
        }>;
    }>;
}>;
declare const testResult: import("superstruct").Struct<"unknown" | "passed" | "failed" | "timedOut" | "skipped", {
    unknown: "unknown";
    passed: "passed";
    failed: "failed";
    timedOut: "timedOut";
    skipped: "skipped";
}>;
declare const test_v2_2_0: import("superstruct").Struct<{
    id: number;
    result: "unknown" | "passed" | "failed" | "timedOut" | "skipped";
    error: {
        name: string;
        message: string;
        line?: number | undefined;
        column?: number | undefined;
    } | null;
    events: {
        afterAll: {
            data: {
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            };
        }[];
        afterEach: {
            data: {
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            };
        }[];
        beforeAll: {
            data: {
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            };
        }[];
        beforeEach: {
            data: {
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            };
        }[];
        main: {
            data: {
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            };
        }[];
    };
    approximateDuration: number;
    source: {
        title: string;
        scope: string[];
    };
    attempt: number;
    executionId: string;
    executionGroupId: string;
    maxAttempts: number;
}, {
    executionId: import("superstruct").Struct<string, null>;
    executionGroupId: import("superstruct").Struct<string, null>;
    maxAttempts: import("superstruct").Struct<number, null>;
    id: import("superstruct").Struct<number, null>;
    result: import("superstruct").Struct<"unknown" | "passed" | "failed" | "timedOut" | "skipped", {
        unknown: "unknown";
        passed: "passed";
        failed: "failed";
        timedOut: "timedOut";
        skipped: "skipped";
    }>;
    error: import("superstruct").Struct<{
        name: string;
        message: string;
        line?: number | undefined;
        column?: number | undefined;
    } | null, {
        name: import("superstruct").Struct<string, null>;
        message: import("superstruct").Struct<string, null>;
        line: import("superstruct").Struct<number | undefined, null>;
        column: import("superstruct").Struct<number | undefined, null>;
    }>;
    events: import("superstruct").Struct<{
        afterAll: {
            data: {
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            };
        }[];
        afterEach: {
            data: {
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            };
        }[];
        beforeAll: {
            data: {
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            };
        }[];
        beforeEach: {
            data: {
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            };
        }[];
        main: {
            data: {
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            };
        }[];
    }, {
        afterAll: import("superstruct").Struct<{
            data: {
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            };
        }[], import("superstruct").Struct<{
            data: {
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            };
        }, {
            data: import("superstruct").Struct<{
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            }, {
                id: import("superstruct").Struct<string, null>;
                parentId: import("superstruct").Struct<string | null, null>;
                category: import("superstruct").Struct<"assertion" | "command" | "other", {
                    assertion: "assertion";
                    command: "command";
                    other: "other";
                }>;
                command: import("superstruct").Struct<{
                    name: string;
                    arguments: string[];
                }, {
                    arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                    name: import("superstruct").Struct<string, null>;
                }>;
                scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                error: import("superstruct").Struct<{
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null, {
                    name: import("superstruct").Struct<string, null>;
                    message: import("superstruct").Struct<string, null>;
                    line: import("superstruct").Struct<number | undefined, null>;
                    column: import("superstruct").Struct<number | undefined, null>;
                }>;
            }>;
        }>>;
        afterEach: import("superstruct").Struct<{
            data: {
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            };
        }[], import("superstruct").Struct<{
            data: {
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            };
        }, {
            data: import("superstruct").Struct<{
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            }, {
                id: import("superstruct").Struct<string, null>;
                parentId: import("superstruct").Struct<string | null, null>;
                category: import("superstruct").Struct<"assertion" | "command" | "other", {
                    assertion: "assertion";
                    command: "command";
                    other: "other";
                }>;
                command: import("superstruct").Struct<{
                    name: string;
                    arguments: string[];
                }, {
                    arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                    name: import("superstruct").Struct<string, null>;
                }>;
                scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                error: import("superstruct").Struct<{
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null, {
                    name: import("superstruct").Struct<string, null>;
                    message: import("superstruct").Struct<string, null>;
                    line: import("superstruct").Struct<number | undefined, null>;
                    column: import("superstruct").Struct<number | undefined, null>;
                }>;
            }>;
        }>>;
        beforeAll: import("superstruct").Struct<{
            data: {
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            };
        }[], import("superstruct").Struct<{
            data: {
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            };
        }, {
            data: import("superstruct").Struct<{
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            }, {
                id: import("superstruct").Struct<string, null>;
                parentId: import("superstruct").Struct<string | null, null>;
                category: import("superstruct").Struct<"assertion" | "command" | "other", {
                    assertion: "assertion";
                    command: "command";
                    other: "other";
                }>;
                command: import("superstruct").Struct<{
                    name: string;
                    arguments: string[];
                }, {
                    arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                    name: import("superstruct").Struct<string, null>;
                }>;
                scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                error: import("superstruct").Struct<{
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null, {
                    name: import("superstruct").Struct<string, null>;
                    message: import("superstruct").Struct<string, null>;
                    line: import("superstruct").Struct<number | undefined, null>;
                    column: import("superstruct").Struct<number | undefined, null>;
                }>;
            }>;
        }>>;
        beforeEach: import("superstruct").Struct<{
            data: {
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            };
        }[], import("superstruct").Struct<{
            data: {
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            };
        }, {
            data: import("superstruct").Struct<{
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            }, {
                id: import("superstruct").Struct<string, null>;
                parentId: import("superstruct").Struct<string | null, null>;
                category: import("superstruct").Struct<"assertion" | "command" | "other", {
                    assertion: "assertion";
                    command: "command";
                    other: "other";
                }>;
                command: import("superstruct").Struct<{
                    name: string;
                    arguments: string[];
                }, {
                    arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                    name: import("superstruct").Struct<string, null>;
                }>;
                scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                error: import("superstruct").Struct<{
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null, {
                    name: import("superstruct").Struct<string, null>;
                    message: import("superstruct").Struct<string, null>;
                    line: import("superstruct").Struct<number | undefined, null>;
                    column: import("superstruct").Struct<number | undefined, null>;
                }>;
            }>;
        }>>;
        main: import("superstruct").Struct<{
            data: {
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            };
        }[], import("superstruct").Struct<{
            data: {
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            };
        }, {
            data: import("superstruct").Struct<{
                id: string;
                parentId: string | null;
                error: {
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null;
                command: {
                    name: string;
                    arguments: string[];
                };
                category: "assertion" | "command" | "other";
                scope: string[] | null;
            }, {
                id: import("superstruct").Struct<string, null>;
                parentId: import("superstruct").Struct<string | null, null>;
                category: import("superstruct").Struct<"assertion" | "command" | "other", {
                    assertion: "assertion";
                    command: "command";
                    other: "other";
                }>;
                command: import("superstruct").Struct<{
                    name: string;
                    arguments: string[];
                }, {
                    arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                    name: import("superstruct").Struct<string, null>;
                }>;
                scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                error: import("superstruct").Struct<{
                    name: string;
                    message: string;
                    line?: number | undefined;
                    column?: number | undefined;
                } | null, {
                    name: import("superstruct").Struct<string, null>;
                    message: import("superstruct").Struct<string, null>;
                    line: import("superstruct").Struct<number | undefined, null>;
                    column: import("superstruct").Struct<number | undefined, null>;
                }>;
            }>;
        }>>;
    }>;
    approximateDuration: import("superstruct").Struct<number, null>;
    source: import("superstruct").Struct<{
        title: string;
        scope: string[];
    }, {
        scope: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
        title: import("superstruct").Struct<string, null>;
    }>;
    attempt: import("superstruct").Struct<number, null>;
}>;
declare const v2_2_0: import("superstruct").Struct<{
    result: "unknown" | "passed" | "failed" | "timedOut" | "skipped";
    tests: {
        id: number;
        result: "unknown" | "passed" | "failed" | "timedOut" | "skipped";
        error: {
            name: string;
            message: string;
            line?: number | undefined;
            column?: number | undefined;
        } | null;
        events: {
            afterAll: {
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[];
            afterEach: {
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[];
            beforeAll: {
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[];
            beforeEach: {
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[];
            main: {
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[];
        };
        approximateDuration: number;
        source: {
            title: string;
            scope: string[];
        };
        attempt: number;
        executionId: string;
        executionGroupId: string;
        maxAttempts: number;
    }[];
    run: {
        id: string;
        title?: string | undefined;
        mode?: string | undefined;
    };
    approximateDuration: number;
    source: {
        path: string;
        title: string;
    };
    environment: {
        errors: {
            name: string;
            message: string;
            code: number;
            detail: string | null;
        }[];
        pluginVersion: string;
        testRunner: {
            name: string;
            version: string;
        };
    };
    resultCounts: Record<"unknown" | "passed" | "failed" | "timedOut" | "skipped", number>;
    schemaVersion: string;
}, {
    tests: import("superstruct").Struct<{
        id: number;
        result: "unknown" | "passed" | "failed" | "timedOut" | "skipped";
        error: {
            name: string;
            message: string;
            line?: number | undefined;
            column?: number | undefined;
        } | null;
        events: {
            afterAll: {
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[];
            afterEach: {
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[];
            beforeAll: {
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[];
            beforeEach: {
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[];
            main: {
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[];
        };
        approximateDuration: number;
        source: {
            title: string;
            scope: string[];
        };
        attempt: number;
        executionId: string;
        executionGroupId: string;
        maxAttempts: number;
    }[], import("superstruct").Struct<{
        id: number;
        result: "unknown" | "passed" | "failed" | "timedOut" | "skipped";
        error: {
            name: string;
            message: string;
            line?: number | undefined;
            column?: number | undefined;
        } | null;
        events: {
            afterAll: {
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[];
            afterEach: {
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[];
            beforeAll: {
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[];
            beforeEach: {
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[];
            main: {
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[];
        };
        approximateDuration: number;
        source: {
            title: string;
            scope: string[];
        };
        attempt: number;
        executionId: string;
        executionGroupId: string;
        maxAttempts: number;
    }, {
        executionId: import("superstruct").Struct<string, null>;
        executionGroupId: import("superstruct").Struct<string, null>;
        maxAttempts: import("superstruct").Struct<number, null>;
        id: import("superstruct").Struct<number, null>;
        result: import("superstruct").Struct<"unknown" | "passed" | "failed" | "timedOut" | "skipped", {
            unknown: "unknown";
            passed: "passed";
            failed: "failed";
            timedOut: "timedOut";
            skipped: "skipped";
        }>;
        error: import("superstruct").Struct<{
            name: string;
            message: string;
            line?: number | undefined;
            column?: number | undefined;
        } | null, {
            name: import("superstruct").Struct<string, null>;
            message: import("superstruct").Struct<string, null>;
            line: import("superstruct").Struct<number | undefined, null>;
            column: import("superstruct").Struct<number | undefined, null>;
        }>;
        events: import("superstruct").Struct<{
            afterAll: {
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[];
            afterEach: {
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[];
            beforeAll: {
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[];
            beforeEach: {
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[];
            main: {
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[];
        }, {
            afterAll: import("superstruct").Struct<{
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[], import("superstruct").Struct<{
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }, {
                data: import("superstruct").Struct<{
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                }, {
                    id: import("superstruct").Struct<string, null>;
                    parentId: import("superstruct").Struct<string | null, null>;
                    category: import("superstruct").Struct<"assertion" | "command" | "other", {
                        assertion: "assertion";
                        command: "command";
                        other: "other";
                    }>;
                    command: import("superstruct").Struct<{
                        name: string;
                        arguments: string[];
                    }, {
                        arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                        name: import("superstruct").Struct<string, null>;
                    }>;
                    scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                    error: import("superstruct").Struct<{
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null, {
                        name: import("superstruct").Struct<string, null>;
                        message: import("superstruct").Struct<string, null>;
                        line: import("superstruct").Struct<number | undefined, null>;
                        column: import("superstruct").Struct<number | undefined, null>;
                    }>;
                }>;
            }>>;
            afterEach: import("superstruct").Struct<{
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[], import("superstruct").Struct<{
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }, {
                data: import("superstruct").Struct<{
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                }, {
                    id: import("superstruct").Struct<string, null>;
                    parentId: import("superstruct").Struct<string | null, null>;
                    category: import("superstruct").Struct<"assertion" | "command" | "other", {
                        assertion: "assertion";
                        command: "command";
                        other: "other";
                    }>;
                    command: import("superstruct").Struct<{
                        name: string;
                        arguments: string[];
                    }, {
                        arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                        name: import("superstruct").Struct<string, null>;
                    }>;
                    scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                    error: import("superstruct").Struct<{
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null, {
                        name: import("superstruct").Struct<string, null>;
                        message: import("superstruct").Struct<string, null>;
                        line: import("superstruct").Struct<number | undefined, null>;
                        column: import("superstruct").Struct<number | undefined, null>;
                    }>;
                }>;
            }>>;
            beforeAll: import("superstruct").Struct<{
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[], import("superstruct").Struct<{
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }, {
                data: import("superstruct").Struct<{
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                }, {
                    id: import("superstruct").Struct<string, null>;
                    parentId: import("superstruct").Struct<string | null, null>;
                    category: import("superstruct").Struct<"assertion" | "command" | "other", {
                        assertion: "assertion";
                        command: "command";
                        other: "other";
                    }>;
                    command: import("superstruct").Struct<{
                        name: string;
                        arguments: string[];
                    }, {
                        arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                        name: import("superstruct").Struct<string, null>;
                    }>;
                    scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                    error: import("superstruct").Struct<{
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null, {
                        name: import("superstruct").Struct<string, null>;
                        message: import("superstruct").Struct<string, null>;
                        line: import("superstruct").Struct<number | undefined, null>;
                        column: import("superstruct").Struct<number | undefined, null>;
                    }>;
                }>;
            }>>;
            beforeEach: import("superstruct").Struct<{
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[], import("superstruct").Struct<{
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }, {
                data: import("superstruct").Struct<{
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                }, {
                    id: import("superstruct").Struct<string, null>;
                    parentId: import("superstruct").Struct<string | null, null>;
                    category: import("superstruct").Struct<"assertion" | "command" | "other", {
                        assertion: "assertion";
                        command: "command";
                        other: "other";
                    }>;
                    command: import("superstruct").Struct<{
                        name: string;
                        arguments: string[];
                    }, {
                        arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                        name: import("superstruct").Struct<string, null>;
                    }>;
                    scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                    error: import("superstruct").Struct<{
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null, {
                        name: import("superstruct").Struct<string, null>;
                        message: import("superstruct").Struct<string, null>;
                        line: import("superstruct").Struct<number | undefined, null>;
                        column: import("superstruct").Struct<number | undefined, null>;
                    }>;
                }>;
            }>>;
            main: import("superstruct").Struct<{
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }[], import("superstruct").Struct<{
                data: {
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                };
            }, {
                data: import("superstruct").Struct<{
                    id: string;
                    parentId: string | null;
                    error: {
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null;
                    command: {
                        name: string;
                        arguments: string[];
                    };
                    category: "assertion" | "command" | "other";
                    scope: string[] | null;
                }, {
                    id: import("superstruct").Struct<string, null>;
                    parentId: import("superstruct").Struct<string | null, null>;
                    category: import("superstruct").Struct<"assertion" | "command" | "other", {
                        assertion: "assertion";
                        command: "command";
                        other: "other";
                    }>;
                    command: import("superstruct").Struct<{
                        name: string;
                        arguments: string[];
                    }, {
                        arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                        name: import("superstruct").Struct<string, null>;
                    }>;
                    scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                    error: import("superstruct").Struct<{
                        name: string;
                        message: string;
                        line?: number | undefined;
                        column?: number | undefined;
                    } | null, {
                        name: import("superstruct").Struct<string, null>;
                        message: import("superstruct").Struct<string, null>;
                        line: import("superstruct").Struct<number | undefined, null>;
                        column: import("superstruct").Struct<number | undefined, null>;
                    }>;
                }>;
            }>>;
        }>;
        approximateDuration: import("superstruct").Struct<number, null>;
        source: import("superstruct").Struct<{
            title: string;
            scope: string[];
        }, {
            scope: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
            title: import("superstruct").Struct<string, null>;
        }>;
        attempt: import("superstruct").Struct<number, null>;
    }>>;
    result: import("superstruct").Struct<"unknown" | "passed" | "failed" | "timedOut" | "skipped", {
        unknown: "unknown";
        passed: "passed";
        failed: "failed";
        timedOut: "timedOut";
        skipped: "skipped";
    }>;
    run: import("superstruct").Struct<{
        id: string;
        title?: string | undefined;
        mode?: string | undefined;
    }, {
        id: import("superstruct").Struct<string, null>;
        title: import("superstruct").Struct<string | undefined, null>;
        mode: import("superstruct").Struct<string | undefined, null>;
    }>;
    approximateDuration: import("superstruct").Struct<number, null>;
    source: import("superstruct").Struct<{
        path: string;
        title: string;
    }, {
        path: import("superstruct").Struct<string, null>;
        title: import("superstruct").Struct<string, null>;
    }>;
    environment: import("superstruct").Struct<{
        errors: {
            name: string;
            message: string;
            code: number;
            detail: string | null;
        }[];
        pluginVersion: string;
        testRunner: {
            name: string;
            version: string;
        };
    }, {
        errors: import("superstruct").Struct<{
            name: string;
            message: string;
            code: number;
            detail: string | null;
        }[], import("superstruct").Struct<{
            name: string;
            message: string;
            code: number;
            detail: string | null;
        }, {
            code: import("superstruct").Struct<number, null>;
            detail: import("superstruct").Struct<string | null, null>;
            name: import("superstruct").Struct<string, null>;
            message: import("superstruct").Struct<string, null>;
        }>>;
        pluginVersion: import("superstruct").Struct<string, null>;
        testRunner: import("superstruct").Struct<{
            name: string;
            version: string;
        }, {
            name: import("superstruct").Struct<string, null>;
            version: import("superstruct").Struct<string, null>;
        }>;
    }>;
    resultCounts: import("superstruct").Struct<Record<"unknown" | "passed" | "failed" | "timedOut" | "skipped", number>, null>;
    schemaVersion: import("superstruct").Struct<string, null>;
}>;
export declare namespace TestMetadataV2 {
    type UserActionEvent = Infer<typeof userActionEvent>;
    type Test = Infer<typeof test_v2_2_0>;
    type TestResult = Infer<typeof testResult>;
    type TestRun = Infer<typeof v2_2_0>;
    type TestError = Infer<typeof testError>;
}
declare const _default: {
    "2.2.0": import("superstruct").Struct<{
        result: "unknown" | "passed" | "failed" | "timedOut" | "skipped";
        tests: {
            id: number;
            result: "unknown" | "passed" | "failed" | "timedOut" | "skipped";
            error: {
                name: string;
                message: string;
                line?: number | undefined;
                column?: number | undefined;
            } | null;
            events: {
                afterAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                afterEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                main: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
            };
            approximateDuration: number;
            source: {
                title: string;
                scope: string[];
            };
            attempt: number;
            executionId: string;
            executionGroupId: string;
            maxAttempts: number;
        }[];
        run: {
            id: string;
            title?: string | undefined;
            mode?: string | undefined;
        };
        approximateDuration: number;
        source: {
            path: string;
            title: string;
        };
        environment: {
            errors: {
                name: string;
                message: string;
                code: number;
                detail: string | null;
            }[];
            pluginVersion: string;
            testRunner: {
                name: string;
                version: string;
            };
        };
        resultCounts: Record<"unknown" | "passed" | "failed" | "timedOut" | "skipped", number>;
        schemaVersion: string;
    }, {
        tests: import("superstruct").Struct<{
            id: number;
            result: "unknown" | "passed" | "failed" | "timedOut" | "skipped";
            error: {
                name: string;
                message: string;
                line?: number | undefined;
                column?: number | undefined;
            } | null;
            events: {
                afterAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                afterEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                main: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
            };
            approximateDuration: number;
            source: {
                title: string;
                scope: string[];
            };
            attempt: number;
            executionId: string;
            executionGroupId: string;
            maxAttempts: number;
        }[], import("superstruct").Struct<{
            id: number;
            result: "unknown" | "passed" | "failed" | "timedOut" | "skipped";
            error: {
                name: string;
                message: string;
                line?: number | undefined;
                column?: number | undefined;
            } | null;
            events: {
                afterAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                afterEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                main: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
            };
            approximateDuration: number;
            source: {
                title: string;
                scope: string[];
            };
            attempt: number;
            executionId: string;
            executionGroupId: string;
            maxAttempts: number;
        }, {
            executionId: import("superstruct").Struct<string, null>;
            executionGroupId: import("superstruct").Struct<string, null>;
            maxAttempts: import("superstruct").Struct<number, null>;
            id: import("superstruct").Struct<number, null>;
            result: import("superstruct").Struct<"unknown" | "passed" | "failed" | "timedOut" | "skipped", {
                unknown: "unknown";
                passed: "passed";
                failed: "failed";
                timedOut: "timedOut";
                skipped: "skipped";
            }>;
            error: import("superstruct").Struct<{
                name: string;
                message: string;
                line?: number | undefined;
                column?: number | undefined;
            } | null, {
                name: import("superstruct").Struct<string, null>;
                message: import("superstruct").Struct<string, null>;
                line: import("superstruct").Struct<number | undefined, null>;
                column: import("superstruct").Struct<number | undefined, null>;
            }>;
            events: import("superstruct").Struct<{
                afterAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                afterEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                main: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
            }, {
                afterAll: import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[], import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }, {
                    data: import("superstruct").Struct<{
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    }, {
                        id: import("superstruct").Struct<string, null>;
                        parentId: import("superstruct").Struct<string | null, null>;
                        category: import("superstruct").Struct<"assertion" | "command" | "other", {
                            assertion: "assertion";
                            command: "command";
                            other: "other";
                        }>;
                        command: import("superstruct").Struct<{
                            name: string;
                            arguments: string[];
                        }, {
                            arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                            name: import("superstruct").Struct<string, null>;
                        }>;
                        scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                        error: import("superstruct").Struct<{
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null, {
                            name: import("superstruct").Struct<string, null>;
                            message: import("superstruct").Struct<string, null>;
                            line: import("superstruct").Struct<number | undefined, null>;
                            column: import("superstruct").Struct<number | undefined, null>;
                        }>;
                    }>;
                }>>;
                afterEach: import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[], import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }, {
                    data: import("superstruct").Struct<{
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    }, {
                        id: import("superstruct").Struct<string, null>;
                        parentId: import("superstruct").Struct<string | null, null>;
                        category: import("superstruct").Struct<"assertion" | "command" | "other", {
                            assertion: "assertion";
                            command: "command";
                            other: "other";
                        }>;
                        command: import("superstruct").Struct<{
                            name: string;
                            arguments: string[];
                        }, {
                            arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                            name: import("superstruct").Struct<string, null>;
                        }>;
                        scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                        error: import("superstruct").Struct<{
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null, {
                            name: import("superstruct").Struct<string, null>;
                            message: import("superstruct").Struct<string, null>;
                            line: import("superstruct").Struct<number | undefined, null>;
                            column: import("superstruct").Struct<number | undefined, null>;
                        }>;
                    }>;
                }>>;
                beforeAll: import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[], import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }, {
                    data: import("superstruct").Struct<{
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    }, {
                        id: import("superstruct").Struct<string, null>;
                        parentId: import("superstruct").Struct<string | null, null>;
                        category: import("superstruct").Struct<"assertion" | "command" | "other", {
                            assertion: "assertion";
                            command: "command";
                            other: "other";
                        }>;
                        command: import("superstruct").Struct<{
                            name: string;
                            arguments: string[];
                        }, {
                            arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                            name: import("superstruct").Struct<string, null>;
                        }>;
                        scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                        error: import("superstruct").Struct<{
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null, {
                            name: import("superstruct").Struct<string, null>;
                            message: import("superstruct").Struct<string, null>;
                            line: import("superstruct").Struct<number | undefined, null>;
                            column: import("superstruct").Struct<number | undefined, null>;
                        }>;
                    }>;
                }>>;
                beforeEach: import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[], import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }, {
                    data: import("superstruct").Struct<{
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    }, {
                        id: import("superstruct").Struct<string, null>;
                        parentId: import("superstruct").Struct<string | null, null>;
                        category: import("superstruct").Struct<"assertion" | "command" | "other", {
                            assertion: "assertion";
                            command: "command";
                            other: "other";
                        }>;
                        command: import("superstruct").Struct<{
                            name: string;
                            arguments: string[];
                        }, {
                            arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                            name: import("superstruct").Struct<string, null>;
                        }>;
                        scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                        error: import("superstruct").Struct<{
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null, {
                            name: import("superstruct").Struct<string, null>;
                            message: import("superstruct").Struct<string, null>;
                            line: import("superstruct").Struct<number | undefined, null>;
                            column: import("superstruct").Struct<number | undefined, null>;
                        }>;
                    }>;
                }>>;
                main: import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[], import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }, {
                    data: import("superstruct").Struct<{
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    }, {
                        id: import("superstruct").Struct<string, null>;
                        parentId: import("superstruct").Struct<string | null, null>;
                        category: import("superstruct").Struct<"assertion" | "command" | "other", {
                            assertion: "assertion";
                            command: "command";
                            other: "other";
                        }>;
                        command: import("superstruct").Struct<{
                            name: string;
                            arguments: string[];
                        }, {
                            arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                            name: import("superstruct").Struct<string, null>;
                        }>;
                        scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                        error: import("superstruct").Struct<{
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null, {
                            name: import("superstruct").Struct<string, null>;
                            message: import("superstruct").Struct<string, null>;
                            line: import("superstruct").Struct<number | undefined, null>;
                            column: import("superstruct").Struct<number | undefined, null>;
                        }>;
                    }>;
                }>>;
            }>;
            approximateDuration: import("superstruct").Struct<number, null>;
            source: import("superstruct").Struct<{
                title: string;
                scope: string[];
            }, {
                scope: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                title: import("superstruct").Struct<string, null>;
            }>;
            attempt: import("superstruct").Struct<number, null>;
        }>>;
        result: import("superstruct").Struct<"unknown" | "passed" | "failed" | "timedOut" | "skipped", {
            unknown: "unknown";
            passed: "passed";
            failed: "failed";
            timedOut: "timedOut";
            skipped: "skipped";
        }>;
        run: import("superstruct").Struct<{
            id: string;
            title?: string | undefined;
            mode?: string | undefined;
        }, {
            id: import("superstruct").Struct<string, null>;
            title: import("superstruct").Struct<string | undefined, null>;
            mode: import("superstruct").Struct<string | undefined, null>;
        }>;
        approximateDuration: import("superstruct").Struct<number, null>;
        source: import("superstruct").Struct<{
            path: string;
            title: string;
        }, {
            path: import("superstruct").Struct<string, null>;
            title: import("superstruct").Struct<string, null>;
        }>;
        environment: import("superstruct").Struct<{
            errors: {
                name: string;
                message: string;
                code: number;
                detail: string | null;
            }[];
            pluginVersion: string;
            testRunner: {
                name: string;
                version: string;
            };
        }, {
            errors: import("superstruct").Struct<{
                name: string;
                message: string;
                code: number;
                detail: string | null;
            }[], import("superstruct").Struct<{
                name: string;
                message: string;
                code: number;
                detail: string | null;
            }, {
                code: import("superstruct").Struct<number, null>;
                detail: import("superstruct").Struct<string | null, null>;
                name: import("superstruct").Struct<string, null>;
                message: import("superstruct").Struct<string, null>;
            }>>;
            pluginVersion: import("superstruct").Struct<string, null>;
            testRunner: import("superstruct").Struct<{
                name: string;
                version: string;
            }, {
                name: import("superstruct").Struct<string, null>;
                version: import("superstruct").Struct<string, null>;
            }>;
        }>;
        resultCounts: import("superstruct").Struct<Record<"unknown" | "passed" | "failed" | "timedOut" | "skipped", number>, null>;
        schemaVersion: import("superstruct").Struct<string, null>;
    }>;
    "2.1.0": import("superstruct").Struct<{
        result: "unknown" | "passed" | "failed" | "timedOut" | "skipped";
        tests: {
            id: number;
            result: "unknown" | "passed" | "failed" | "timedOut" | "skipped";
            error: {
                name: string;
                message: string;
                line?: number | undefined;
                column?: number | undefined;
            } | null;
            events: {
                afterAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                afterEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                main: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
            };
            approximateDuration: number;
            source: {
                title: string;
                scope: string[];
            };
            attempt: number;
        }[];
        run: {
            id: string;
            title?: string | undefined;
            mode?: string | undefined;
        };
        approximateDuration: number;
        source: {
            path: string;
            title: string;
        };
        environment: {
            errors: {
                name: string;
                message: string;
                code: number;
                detail: string | null;
            }[];
            pluginVersion: string;
            testRunner: {
                name: string;
                version: string;
            };
        };
        resultCounts: Record<"unknown" | "passed" | "failed" | "timedOut" | "skipped", number>;
        schemaVersion: string;
    }, {
        tests: import("superstruct").Struct<{
            id: number;
            result: "unknown" | "passed" | "failed" | "timedOut" | "skipped";
            error: {
                name: string;
                message: string;
                line?: number | undefined;
                column?: number | undefined;
            } | null;
            events: {
                afterAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                afterEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                main: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
            };
            approximateDuration: number;
            source: {
                title: string;
                scope: string[];
            };
            attempt: number;
        }[], import("superstruct").Struct<{
            id: number;
            result: "unknown" | "passed" | "failed" | "timedOut" | "skipped";
            error: {
                name: string;
                message: string;
                line?: number | undefined;
                column?: number | undefined;
            } | null;
            events: {
                afterAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                afterEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                main: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
            };
            approximateDuration: number;
            source: {
                title: string;
                scope: string[];
            };
            attempt: number;
        }, {
            id: import("superstruct").Struct<number, null>;
            attempt: import("superstruct").Struct<number, null>;
            result: import("superstruct").Struct<"unknown" | "passed" | "failed" | "timedOut" | "skipped", {
                unknown: "unknown";
                passed: "passed";
                failed: "failed";
                timedOut: "timedOut";
                skipped: "skipped";
            }>;
            error: import("superstruct").Struct<{
                name: string;
                message: string;
                line?: number | undefined;
                column?: number | undefined;
            } | null, {
                name: import("superstruct").Struct<string, null>;
                message: import("superstruct").Struct<string, null>;
                line: import("superstruct").Struct<number | undefined, null>;
                column: import("superstruct").Struct<number | undefined, null>;
            }>;
            events: import("superstruct").Struct<{
                afterAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                afterEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                main: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
            }, {
                afterAll: import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[], import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }, {
                    data: import("superstruct").Struct<{
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    }, {
                        id: import("superstruct").Struct<string, null>;
                        parentId: import("superstruct").Struct<string | null, null>;
                        category: import("superstruct").Struct<"assertion" | "command" | "other", {
                            assertion: "assertion";
                            command: "command";
                            other: "other";
                        }>;
                        command: import("superstruct").Struct<{
                            name: string;
                            arguments: string[];
                        }, {
                            arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                            name: import("superstruct").Struct<string, null>;
                        }>;
                        scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                        error: import("superstruct").Struct<{
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null, {
                            name: import("superstruct").Struct<string, null>;
                            message: import("superstruct").Struct<string, null>;
                            line: import("superstruct").Struct<number | undefined, null>;
                            column: import("superstruct").Struct<number | undefined, null>;
                        }>;
                    }>;
                }>>;
                afterEach: import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[], import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }, {
                    data: import("superstruct").Struct<{
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    }, {
                        id: import("superstruct").Struct<string, null>;
                        parentId: import("superstruct").Struct<string | null, null>;
                        category: import("superstruct").Struct<"assertion" | "command" | "other", {
                            assertion: "assertion";
                            command: "command";
                            other: "other";
                        }>;
                        command: import("superstruct").Struct<{
                            name: string;
                            arguments: string[];
                        }, {
                            arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                            name: import("superstruct").Struct<string, null>;
                        }>;
                        scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                        error: import("superstruct").Struct<{
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null, {
                            name: import("superstruct").Struct<string, null>;
                            message: import("superstruct").Struct<string, null>;
                            line: import("superstruct").Struct<number | undefined, null>;
                            column: import("superstruct").Struct<number | undefined, null>;
                        }>;
                    }>;
                }>>;
                beforeAll: import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[], import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }, {
                    data: import("superstruct").Struct<{
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    }, {
                        id: import("superstruct").Struct<string, null>;
                        parentId: import("superstruct").Struct<string | null, null>;
                        category: import("superstruct").Struct<"assertion" | "command" | "other", {
                            assertion: "assertion";
                            command: "command";
                            other: "other";
                        }>;
                        command: import("superstruct").Struct<{
                            name: string;
                            arguments: string[];
                        }, {
                            arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                            name: import("superstruct").Struct<string, null>;
                        }>;
                        scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                        error: import("superstruct").Struct<{
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null, {
                            name: import("superstruct").Struct<string, null>;
                            message: import("superstruct").Struct<string, null>;
                            line: import("superstruct").Struct<number | undefined, null>;
                            column: import("superstruct").Struct<number | undefined, null>;
                        }>;
                    }>;
                }>>;
                beforeEach: import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[], import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }, {
                    data: import("superstruct").Struct<{
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    }, {
                        id: import("superstruct").Struct<string, null>;
                        parentId: import("superstruct").Struct<string | null, null>;
                        category: import("superstruct").Struct<"assertion" | "command" | "other", {
                            assertion: "assertion";
                            command: "command";
                            other: "other";
                        }>;
                        command: import("superstruct").Struct<{
                            name: string;
                            arguments: string[];
                        }, {
                            arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                            name: import("superstruct").Struct<string, null>;
                        }>;
                        scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                        error: import("superstruct").Struct<{
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null, {
                            name: import("superstruct").Struct<string, null>;
                            message: import("superstruct").Struct<string, null>;
                            line: import("superstruct").Struct<number | undefined, null>;
                            column: import("superstruct").Struct<number | undefined, null>;
                        }>;
                    }>;
                }>>;
                main: import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[], import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }, {
                    data: import("superstruct").Struct<{
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    }, {
                        id: import("superstruct").Struct<string, null>;
                        parentId: import("superstruct").Struct<string | null, null>;
                        category: import("superstruct").Struct<"assertion" | "command" | "other", {
                            assertion: "assertion";
                            command: "command";
                            other: "other";
                        }>;
                        command: import("superstruct").Struct<{
                            name: string;
                            arguments: string[];
                        }, {
                            arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                            name: import("superstruct").Struct<string, null>;
                        }>;
                        scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                        error: import("superstruct").Struct<{
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null, {
                            name: import("superstruct").Struct<string, null>;
                            message: import("superstruct").Struct<string, null>;
                            line: import("superstruct").Struct<number | undefined, null>;
                            column: import("superstruct").Struct<number | undefined, null>;
                        }>;
                    }>;
                }>>;
            }>;
            approximateDuration: import("superstruct").Struct<number, null>;
            source: import("superstruct").Struct<{
                title: string;
                scope: string[];
            }, {
                scope: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                title: import("superstruct").Struct<string, null>;
            }>;
        }>>;
        result: import("superstruct").Struct<"unknown" | "passed" | "failed" | "timedOut" | "skipped", {
            unknown: "unknown";
            passed: "passed";
            failed: "failed";
            timedOut: "timedOut";
            skipped: "skipped";
        }>;
        run: import("superstruct").Struct<{
            id: string;
            title?: string | undefined;
            mode?: string | undefined;
        }, {
            id: import("superstruct").Struct<string, null>;
            title: import("superstruct").Struct<string | undefined, null>;
            mode: import("superstruct").Struct<string | undefined, null>;
        }>;
        approximateDuration: import("superstruct").Struct<number, null>;
        source: import("superstruct").Struct<{
            path: string;
            title: string;
        }, {
            path: import("superstruct").Struct<string, null>;
            title: import("superstruct").Struct<string, null>;
        }>;
        environment: import("superstruct").Struct<{
            errors: {
                name: string;
                message: string;
                code: number;
                detail: string | null;
            }[];
            pluginVersion: string;
            testRunner: {
                name: string;
                version: string;
            };
        }, {
            errors: import("superstruct").Struct<{
                name: string;
                message: string;
                code: number;
                detail: string | null;
            }[], import("superstruct").Struct<{
                name: string;
                message: string;
                code: number;
                detail: string | null;
            }, {
                code: import("superstruct").Struct<number, null>;
                detail: import("superstruct").Struct<string | null, null>;
                name: import("superstruct").Struct<string, null>;
                message: import("superstruct").Struct<string, null>;
            }>>;
            pluginVersion: import("superstruct").Struct<string, null>;
            testRunner: import("superstruct").Struct<{
                name: string;
                version: string;
            }, {
                name: import("superstruct").Struct<string, null>;
                version: import("superstruct").Struct<string, null>;
            }>;
        }>;
        resultCounts: import("superstruct").Struct<Record<"unknown" | "passed" | "failed" | "timedOut" | "skipped", number>, null>;
        schemaVersion: import("superstruct").Struct<string, null>;
    }>;
    "2.0.0": import("superstruct").Struct<{
        result: "unknown" | "passed" | "failed" | "timedOut" | "skipped";
        tests: {
            result: "unknown" | "passed" | "failed" | "timedOut" | "skipped";
            error: {
                name: string;
                message: string;
                line?: number | undefined;
                column?: number | undefined;
            } | null;
            events: {
                afterAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                afterEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                main: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
            };
            approximateDuration: number;
            source: {
                title: string;
                scope: string[];
            };
        }[];
        run: {
            id: string;
            title?: string | undefined;
            mode?: string | undefined;
        };
        approximateDuration: number;
        source: {
            path: string;
            title: string;
        };
        environment: {
            errors: {
                name: string;
                message: string;
                code: number;
                detail: string | null;
            }[];
            pluginVersion: string;
            testRunner: {
                name: string;
                version: string;
            };
        };
        resultCounts: Record<"unknown" | "passed" | "failed" | "timedOut" | "skipped", number>;
        schemaVersion: string;
    }, {
        approximateDuration: import("superstruct").Struct<number, null>;
        environment: import("superstruct").Struct<{
            errors: {
                name: string;
                message: string;
                code: number;
                detail: string | null;
            }[];
            pluginVersion: string;
            testRunner: {
                name: string;
                version: string;
            };
        }, {
            errors: import("superstruct").Struct<{
                name: string;
                message: string;
                code: number;
                detail: string | null;
            }[], import("superstruct").Struct<{
                name: string;
                message: string;
                code: number;
                detail: string | null;
            }, {
                code: import("superstruct").Struct<number, null>;
                detail: import("superstruct").Struct<string | null, null>;
                name: import("superstruct").Struct<string, null>;
                message: import("superstruct").Struct<string, null>;
            }>>;
            pluginVersion: import("superstruct").Struct<string, null>;
            testRunner: import("superstruct").Struct<{
                name: string;
                version: string;
            }, {
                name: import("superstruct").Struct<string, null>;
                version: import("superstruct").Struct<string, null>;
            }>;
        }>;
        result: import("superstruct").Struct<"unknown" | "passed" | "failed" | "timedOut" | "skipped", {
            unknown: "unknown";
            passed: "passed";
            failed: "failed";
            timedOut: "timedOut";
            skipped: "skipped";
        }>;
        resultCounts: import("superstruct").Struct<Record<"unknown" | "passed" | "failed" | "timedOut" | "skipped", number>, null>;
        schemaVersion: import("superstruct").Struct<string, null>;
        source: import("superstruct").Struct<{
            path: string;
            title: string;
        }, {
            path: import("superstruct").Struct<string, null>;
            title: import("superstruct").Struct<string, null>;
        }>;
        tests: import("superstruct").Struct<{
            result: "unknown" | "passed" | "failed" | "timedOut" | "skipped";
            error: {
                name: string;
                message: string;
                line?: number | undefined;
                column?: number | undefined;
            } | null;
            events: {
                afterAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                afterEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                main: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
            };
            approximateDuration: number;
            source: {
                title: string;
                scope: string[];
            };
        }[], import("superstruct").Struct<{
            result: "unknown" | "passed" | "failed" | "timedOut" | "skipped";
            error: {
                name: string;
                message: string;
                line?: number | undefined;
                column?: number | undefined;
            } | null;
            events: {
                afterAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                afterEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                main: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
            };
            approximateDuration: number;
            source: {
                title: string;
                scope: string[];
            };
        }, {
            events: import("superstruct").Struct<{
                afterAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                afterEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeAll: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                beforeEach: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
                main: {
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[];
            }, {
                afterAll: import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[], import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }, {
                    data: import("superstruct").Struct<{
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    }, {
                        id: import("superstruct").Struct<string, null>;
                        parentId: import("superstruct").Struct<string | null, null>;
                        category: import("superstruct").Struct<"assertion" | "command" | "other", {
                            assertion: "assertion";
                            command: "command";
                            other: "other";
                        }>;
                        command: import("superstruct").Struct<{
                            name: string;
                            arguments: string[];
                        }, {
                            arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                            name: import("superstruct").Struct<string, null>;
                        }>;
                        scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                        error: import("superstruct").Struct<{
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null, {
                            name: import("superstruct").Struct<string, null>;
                            message: import("superstruct").Struct<string, null>;
                            line: import("superstruct").Struct<number | undefined, null>;
                            column: import("superstruct").Struct<number | undefined, null>;
                        }>;
                    }>;
                }>>;
                afterEach: import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[], import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }, {
                    data: import("superstruct").Struct<{
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    }, {
                        id: import("superstruct").Struct<string, null>;
                        parentId: import("superstruct").Struct<string | null, null>;
                        category: import("superstruct").Struct<"assertion" | "command" | "other", {
                            assertion: "assertion";
                            command: "command";
                            other: "other";
                        }>;
                        command: import("superstruct").Struct<{
                            name: string;
                            arguments: string[];
                        }, {
                            arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                            name: import("superstruct").Struct<string, null>;
                        }>;
                        scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                        error: import("superstruct").Struct<{
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null, {
                            name: import("superstruct").Struct<string, null>;
                            message: import("superstruct").Struct<string, null>;
                            line: import("superstruct").Struct<number | undefined, null>;
                            column: import("superstruct").Struct<number | undefined, null>;
                        }>;
                    }>;
                }>>;
                beforeAll: import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[], import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }, {
                    data: import("superstruct").Struct<{
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    }, {
                        id: import("superstruct").Struct<string, null>;
                        parentId: import("superstruct").Struct<string | null, null>;
                        category: import("superstruct").Struct<"assertion" | "command" | "other", {
                            assertion: "assertion";
                            command: "command";
                            other: "other";
                        }>;
                        command: import("superstruct").Struct<{
                            name: string;
                            arguments: string[];
                        }, {
                            arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                            name: import("superstruct").Struct<string, null>;
                        }>;
                        scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                        error: import("superstruct").Struct<{
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null, {
                            name: import("superstruct").Struct<string, null>;
                            message: import("superstruct").Struct<string, null>;
                            line: import("superstruct").Struct<number | undefined, null>;
                            column: import("superstruct").Struct<number | undefined, null>;
                        }>;
                    }>;
                }>>;
                beforeEach: import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[], import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }, {
                    data: import("superstruct").Struct<{
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    }, {
                        id: import("superstruct").Struct<string, null>;
                        parentId: import("superstruct").Struct<string | null, null>;
                        category: import("superstruct").Struct<"assertion" | "command" | "other", {
                            assertion: "assertion";
                            command: "command";
                            other: "other";
                        }>;
                        command: import("superstruct").Struct<{
                            name: string;
                            arguments: string[];
                        }, {
                            arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                            name: import("superstruct").Struct<string, null>;
                        }>;
                        scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                        error: import("superstruct").Struct<{
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null, {
                            name: import("superstruct").Struct<string, null>;
                            message: import("superstruct").Struct<string, null>;
                            line: import("superstruct").Struct<number | undefined, null>;
                            column: import("superstruct").Struct<number | undefined, null>;
                        }>;
                    }>;
                }>>;
                main: import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }[], import("superstruct").Struct<{
                    data: {
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    };
                }, {
                    data: import("superstruct").Struct<{
                        id: string;
                        parentId: string | null;
                        error: {
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null;
                        command: {
                            name: string;
                            arguments: string[];
                        };
                        category: "assertion" | "command" | "other";
                        scope: string[] | null;
                    }, {
                        id: import("superstruct").Struct<string, null>;
                        parentId: import("superstruct").Struct<string | null, null>;
                        category: import("superstruct").Struct<"assertion" | "command" | "other", {
                            assertion: "assertion";
                            command: "command";
                            other: "other";
                        }>;
                        command: import("superstruct").Struct<{
                            name: string;
                            arguments: string[];
                        }, {
                            arguments: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                            name: import("superstruct").Struct<string, null>;
                        }>;
                        scope: import("superstruct").Struct<string[] | null, import("superstruct").Struct<string, null>>;
                        error: import("superstruct").Struct<{
                            name: string;
                            message: string;
                            line?: number | undefined;
                            column?: number | undefined;
                        } | null, {
                            name: import("superstruct").Struct<string, null>;
                            message: import("superstruct").Struct<string, null>;
                            line: import("superstruct").Struct<number | undefined, null>;
                            column: import("superstruct").Struct<number | undefined, null>;
                        }>;
                    }>;
                }>>;
            }>;
            approximateDuration: import("superstruct").Struct<number, null>;
            result: import("superstruct").Struct<"unknown" | "passed" | "failed" | "timedOut" | "skipped", {
                unknown: "unknown";
                passed: "passed";
                failed: "failed";
                timedOut: "timedOut";
                skipped: "skipped";
            }>;
            source: import("superstruct").Struct<{
                title: string;
                scope: string[];
            }, {
                scope: import("superstruct").Struct<string[], import("superstruct").Struct<string, null>>;
                title: import("superstruct").Struct<string, null>;
            }>;
            error: import("superstruct").Struct<{
                name: string;
                message: string;
                line?: number | undefined;
                column?: number | undefined;
            } | null, {
                name: import("superstruct").Struct<string, null>;
                message: import("superstruct").Struct<string, null>;
                line: import("superstruct").Struct<number | undefined, null>;
                column: import("superstruct").Struct<number | undefined, null>;
            }>;
        }>>;
        run: import("superstruct").Struct<{
            id: string;
            title?: string | undefined;
            mode?: string | undefined;
        }, {
            id: import("superstruct").Struct<string, null>;
            title: import("superstruct").Struct<string | undefined, null>;
            mode: import("superstruct").Struct<string | undefined, null>;
        }>;
    }>;
};
export default _default;
//# sourceMappingURL=v2.d.ts.map