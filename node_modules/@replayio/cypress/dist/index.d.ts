/// <reference types="cypress" />
/// <reference types="cypress" />
/// <reference types="cypress" />
/// <reference types="cypress" />
import CypressReporter, { PluginOptions, getMetadataFilePath } from "./reporter";
export type { PluginOptions } from "./reporter";
declare function onBeforeRun(details: Cypress.BeforeRunDetails): Promise<void>;
declare function onBeforeBrowserLaunch(browser: Cypress.Browser, launchOptions: Cypress.BeforeBrowserLaunchOptions): Cypress.BeforeBrowserLaunchOptions;
declare function onAfterRun(): Promise<void>;
declare function onBeforeSpec(spec: Cypress.Spec): void;
declare function onAfterSpec(spec: Cypress.Spec, result: CypressCommandLine.RunResult): Promise<void>;
declare const cypressOnWrapper: (base: Cypress.PluginEvents) => Cypress.PluginEvents;
declare const plugin: (on: Cypress.PluginEvents, config: Cypress.PluginConfigOptions, options?: PluginOptions) => Cypress.PluginConfigOptions;
export declare function getCypressReporter(): CypressReporter | undefined;
export default plugin;
export { plugin, cypressOnWrapper as wrapOn, onBeforeRun, onBeforeBrowserLaunch, onBeforeSpec, onAfterSpec, onAfterRun, getMetadataFilePath, };
//# sourceMappingURL=index.d.ts.map