"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createServer = void 0;
const debug_1 = __importDefault(require("debug"));
const http_1 = __importDefault(require("http"));
const ws_1 = require("ws");
const debug = (0, debug_1.default)("replay:cypress:server");
async function createServer() {
    debug("Creating websocket server");
    const server = http_1.default.createServer();
    const wss = new ws_1.WebSocketServer({ noServer: true });
    server.on("upgrade", function upgrade(request, socket, head) {
        debug("Upgrading request");
        wss.handleUpgrade(request, socket, head, function done(ws) {
            debug("Upgraded");
            wss.emit("connection", ws, request);
        });
    });
    return new Promise(resolve => {
        const config = {
            // Pick any available port unless set by user
            port: process.env.CYPRESS_REPLAY_SOCKET_PORT
                ? Number.parseInt(process.env.CYPRESS_REPLAY_SOCKET_PORT)
                : 0,
            // Explicitly use ipv4 unless set by user
            host: process.env.CYPRESS_REPLAY_SOCKET_HOST || "0.0.0.0",
        };
        debug("Server config: %o", config);
        server.listen(config, () => {
            const { address, port } = server.address();
            debug("Listening on %s on port %d", address, port);
            resolve({ server: wss, port });
        });
    });
}
exports.createServer = createServer;
//# sourceMappingURL=server.js.map