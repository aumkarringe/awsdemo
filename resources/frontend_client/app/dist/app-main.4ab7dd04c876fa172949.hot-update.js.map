{"version":3,"file":"app-main.4ab7dd04c876fa172949.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;AAKA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AAGA;AACA;AAGA;AACA;AACA;AACA","sources":["/Users/aumkarringe/Downloads/DataLMwhite theme/ogmetabase/metabase/frontend/src/metabase/admin/app/reducers.ts"],"sourcesContent":["import { createReducer } from \"@reduxjs/toolkit\";\nimport { t } from \"ttag\";\n\nimport { combineReducers } from \"metabase/lib/redux\";\nimport Settings from \"metabase/lib/settings\";\nimport { isNotNull } from \"metabase/lib/types\";\nimport {\n  PLUGIN_ADMIN_ALLOWED_PATH_GETTERS,\n  PLUGIN_ADMIN_NAV_ITEMS,\n  PLUGIN_ADMIN_TOOLS,\n} from \"metabase/plugins\";\nimport { refreshCurrentUser } from \"metabase/redux/user\";\nimport type { AdminPath, AdminPathKey } from \"metabase-types/store\";\n\nimport { disableNotice } from \"./actions\";\n\nexport const getAdminPaths: () => AdminPath[] = () => {\n  const items: AdminPath[] = [\n    {\n      name: t`Settings`,\n      path: \"/admin/settings\",\n      key: \"settings\",\n    },\n    {\n      name: t`Databases`,\n      path: \"/admin/databases\",\n      key: \"databases\",\n    },\n    {\n      name: t`Table Metadata`,\n      path: \"/admin/datamodel\",\n      key: \"data-model\",\n    },\n    {\n      name: t`People`,\n      path: \"/admin/people\",\n      key: \"people\",\n    },\n    {\n      name: t`Permissions`,\n      path: \"/admin/permissions\",\n      key: \"permissions\",\n    },\n    {\n      name: t`Performance`,\n      path: \"/admin/performance\",\n      key: \"performance\",\n    },\n  ];\n\n  const isModelPersistenceEnabled = Settings.get(\"persisted-models-enabled\");\n\n  if (isModelPersistenceEnabled || PLUGIN_ADMIN_TOOLS.EXTRA_ROUTES.length > 0) {\n    items.push({\n      name: t`Tools`,\n      path: \"/admin/tools\",\n      key: \"tools\",\n    });\n  }\n\n  // items.push(...PLUGIN_ADMIN_NAV_ITEMS, {\n  //   name: t`Troubleshooting`,\n  //   path: \"/admin/troubleshooting\",\n  //   key: \"troubleshooting\",\n  // });\n\n  return items;\n};\n\nconst paths = createReducer(getAdminPaths(), builder => {\n  builder.addCase(refreshCurrentUser.fulfilled, (state, { payload: user }) => {\n    if (user?.is_superuser) {\n      return state;\n    }\n\n    const allowedPaths = PLUGIN_ADMIN_ALLOWED_PATH_GETTERS.map(getter => {\n      return getter(user);\n    })\n      .flat()\n      .reduce((acc, pathKey) => {\n        acc.add(pathKey);\n        return acc;\n      }, new Set<AdminPathKey>());\n\n    return state\n      .filter(path => (allowedPaths.has(path.key) ? path : null))\n      .filter(isNotNull);\n  });\n});\n\nconst isNoticeEnabled = createReducer(\n  Settings.deprecationNoticeEnabled(),\n  builder => {\n    builder.addCase(disableNotice.fulfilled, () => false);\n  },\n);\n\nexport const appReducer = combineReducers({\n  isNoticeEnabled,\n  paths,\n});\n"],"names":[],"sourceRoot":""}