{"version":3,"file":"app-main.09c88d2bb81c0fba14f1.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AAUA;AAAA;AAQA;AAGA;AAAA;AAFA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AAAA;AAzCA;AAIA;AAAA;AA4CA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAEA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AAGA;AAAA;AAjCA;AAGA;AAAA;AAHA;AAAA;AAAA","sources":["/Users/aumkarringe/Downloads/DataLMwhite theme/ogmetabase/metabase/frontend/src/metabase/nav/components/AdminNavbar/AdminNavbar.tsx"],"sourcesContent":["import { useClickOutside } from \"@mantine/hooks\";\nimport cx from \"classnames\";\nimport { useState } from \"react\";\nimport { t } from \"ttag\";\n\nimport LogoIcon from \"metabase/components/LogoIcon\";\nimport CS from \"metabase/css/core/index.css\";\nimport { useSelector } from \"metabase/lib/redux\";\nimport { getIsPaidPlan } from \"metabase/selectors/settings\";\nimport { Button, Icon } from \"metabase/ui\";\nimport type { User } from \"metabase-types/api\";\nimport type { AdminPath } from \"metabase-types/store\";\n\nimport StoreLink from \"../StoreLink\";\n\nimport { AdminNavItem } from \"./AdminNavItem\";\nimport AdminNavCS from \"./AdminNavbar.module.css\";\nimport {\n  AdminExitLink,\n  AdminLogoContainer,\n  AdminLogoLink,\n  AdminLogoText,\n  AdminNavbarItems,\n  AdminNavbarRoot,\n  AdminMobileNavbar,\n  AdminMobileNavBarItems,\n  MobileHide,\n} from \"./AdminNavbar.styled\";\n\ninterface AdminNavbarProps {\n  path: string;\n  user: User;\n  adminPaths: AdminPath[];\n}\n\nexport const AdminNavbar = ({\n  path: currentPath,\n  adminPaths,\n}: AdminNavbarProps) => {\n  const isPaidPlain = useSelector(getIsPaidPlan);\n\n  return (\n    <AdminNavbarRoot\n      data-element-id=\"navbar-root\"\n      aria-label={t`Navigation bar`}\n    >\n      <AdminLogoLink to=\"/admin\">\n        <AdminLogoContainer>\n          <LogoIcon className={cx(CS.textBrand, CS.my2)} dark />\n          {/* eslint-disable-next-line no-literal-metabase-strings -- Metabase settings */}\n          <AdminLogoText>{t`DataLM.ai Admin`}</AdminLogoText>\n        </AdminLogoContainer>\n      </AdminLogoLink>\n\n      <MobileNavbar adminPaths={adminPaths} currentPath={currentPath} />\n\n      <MobileHide>\n        <AdminNavbarItems>\n          {adminPaths.map(({ name, key, path }) => (\n            <AdminNavItem\n              name={name}\n              path={path}\n              key={key}\n              currentPath={currentPath}\n            />\n          ))}\n        </AdminNavbarItems>\n\n        {!isPaidPlain && <StoreLink />}\n        <AdminExitLink\n          to=\"/\"\n          data-testid=\"exit-admin\"\n        >{t`Exit admin`}</AdminExitLink>\n      </MobileHide>\n    </AdminNavbarRoot>\n  );\n};\n\ninterface AdminMobileNavbarProps {\n  adminPaths: AdminPath[];\n  currentPath: string;\n}\n\nconst MobileNavbar = ({ adminPaths, currentPath }: AdminMobileNavbarProps) => {\n  const [mobileNavOpen, setMobileNavOpen] = useState(false);\n\n  const ref = useClickOutside(() => setMobileNavOpen(false));\n\n  return (\n    <AdminMobileNavbar ref={ref}>\n      <Button\n        onClick={() => setMobileNavOpen(prev => !prev)}\n        variant=\"subtle\"\n        p=\"0.25rem\"\n      >\n        <Icon\n          name=\"burger\"\n          size={32}\n          className={AdminNavCS.MobileHamburgerIcon}\n        />\n      </Button>\n      {mobileNavOpen && (\n        <AdminMobileNavBarItems aria-label={t`Navigation links`}>\n          {adminPaths.map(({ name, key, path }) => (\n            <AdminNavItem\n              name={name}\n              path={path}\n              key={key}\n              currentPath={currentPath}\n            />\n          ))}\n          <AdminExitLink to=\"/\">{t`Exit admin`}</AdminExitLink>\n        </AdminMobileNavBarItems>\n      )}\n    </AdminMobileNavbar>\n  );\n};\n"],"names":[],"sourceRoot":""}