{"version":3,"file":"app-main.4763a944b1c9df5a66e6.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAIA;AAAA;AAEA;AACA;AACA;AAEA;AAaA;AAMA;AAAA;AALA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAKA;AAKA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAGA;AAAA;AAtEA;AAwEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAIA;;AAEA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5HA;AACA","sources":["/Users/aumkarringe/Downloads/DataLMwhite theme/ogmetabase/metabase/frontend/src/metabase/admin/settings/auth/components/GoogleAuthForm/GoogleAuthForm.styled.tsx","/Users/aumkarringe/Downloads/DataLMwhite theme/ogmetabase/metabase/frontend/src/metabase/admin/settings/auth/components/GoogleAuthForm/GoogleAuthForm.tsx","/Users/aumkarringe/Downloads/DataLMwhite theme/ogmetabase/metabase/frontend/src/metabase/admin/settings/auth/components/GoogleAuthForm/index.ts"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nimport { Form } from \"metabase/forms\";\n\nexport const GoogleForm = styled(Form)`\n  margin: 0 1rem;\n  max-width: 32.5rem;\n`;\n\nexport const GoogleFormHeader = styled.h2`\n  margin-top: 1rem;\n`;\n\nexport const GoogleFormCaption = styled.p`\n  color: var(--mb-color-text-medium);\n`;\n","import { useMemo } from \"react\";\nimport { jt, t } from \"ttag\";\nimport _ from \"underscore\";\n\nimport Breadcrumbs from \"metabase/components/Breadcrumbs\";\nimport ExternalLink from \"metabase/core/components/ExternalLink\";\nimport FormErrorMessage from \"metabase/core/components/FormErrorMessage\";\nimport FormInput from \"metabase/core/components/FormInput\";\nimport FormSubmitButton from \"metabase/core/components/FormSubmitButton\";\nimport { FormProvider } from \"metabase/forms\";\nimport MetabaseSettings from \"metabase/lib/settings\";\nimport type { SettingDefinition, Settings } from \"metabase-types/api\";\n\nimport { GOOGLE_SCHEMA } from \"../../constants\";\n\nimport {\n  GoogleForm,\n  GoogleFormCaption,\n  GoogleFormHeader,\n} from \"./GoogleAuthForm.styled\";\n\nconst ENABLED_KEY = \"google-auth-enabled\";\nconst CLIENT_ID_KEY = \"google-auth-client-id\";\nconst DOMAIN_KEY = \"google-auth-auto-create-accounts-domain\";\n\nconst BREADCRUMBS = [\n  [t`Authentication`, \"/admin/settings/authentication\"],\n  [t`Google Sign-In`],\n];\n\nexport interface GoogleAuthFormProps {\n  elements?: SettingDefinition[];\n  settingValues?: Partial<Settings>;\n  isEnabled: boolean;\n  isSsoEnabled: boolean;\n  onSubmit: (settingValues: Partial<Settings>) => void;\n}\n\nconst GoogleAuthForm = ({\n  elements = [],\n  settingValues = {},\n  isEnabled,\n  isSsoEnabled,\n  onSubmit,\n}: GoogleAuthFormProps): JSX.Element => {\n  const settings = useMemo(() => {\n    return _.indexBy(elements, \"key\");\n  }, [elements]);\n\n  const initialValues = useMemo(() => {\n    const values = GOOGLE_SCHEMA.cast(settingValues, { stripUnknown: true });\n    return { ...values, [ENABLED_KEY]: true };\n  }, [settingValues]);\n\n  return (\n    <FormProvider\n      initialValues={initialValues}\n      enableReinitialize\n      validationSchema={GOOGLE_SCHEMA}\n      validationContext={settings}\n      onSubmit={onSubmit}\n    >\n      {({ dirty }) => (\n        <GoogleForm disabled={!dirty}>\n          <Breadcrumbs crumbs={BREADCRUMBS} />\n          <GoogleFormHeader>{t`Sign in with Google`}</GoogleFormHeader>\n          <GoogleFormCaption>\n            {t`Allows users with existing Metabase accounts to login with a Google account that matches their email address in addition to their Metabase username and password.`}\n          </GoogleFormCaption>\n          <GoogleFormCaption>\n            {jt`To allow users to sign in with Google you'll need to give Metabase a Google Developers console application client ID. It only takes a few steps and instructions on how to create a key can be found ${(\n              <ExternalLink key=\"link\" href={getDocsLink()}>\n                {t`here`}\n              </ExternalLink>\n            )}.`}\n          </GoogleFormCaption>\n          <FormInput\n            name={CLIENT_ID_KEY}\n            title={t`Client ID`}\n            placeholder={t`{your-client-id}.apps.googleusercontent.com`}\n            {...getFormFieldProps(settings[CLIENT_ID_KEY])}\n          />\n          <FormInput\n            name={DOMAIN_KEY}\n            title={t`Domain`}\n            description={\n              isSsoEnabled\n                ? t`Allow users to sign up on their own if their Google account email address is from one of the domains you specify here:`\n                : t`Allow users to sign up on their own if their Google account email address is from:`\n            }\n            placeholder={\n              isSsoEnabled\n                ? \"mycompany.com, example.com.br, otherdomain.co.uk\"\n                : \"mycompany.com\"\n            }\n            nullable\n            {...getFormFieldProps(settings[DOMAIN_KEY])}\n          />\n          <FormSubmitButton\n            title={isEnabled ? t`Save changes` : t`Save and enable`}\n            primary\n            disabled={!dirty}\n          />\n          <FormErrorMessage />\n        </GoogleForm>\n      )}\n    </FormProvider>\n  );\n};\n\nconst getFormFieldProps = (setting?: SettingDefinition) => {\n  if (setting?.is_env_setting) {\n    return { placeholder: t`Using ${setting.env_name}`, readOnly: true };\n  }\n};\n\nconst getDocsLink = (): string => {\n  return MetabaseSettings.docsUrl(\n    \"people-and-groups/google-and-ldap\",\n    \"enabling-google-sign-in\",\n  );\n};\n\n// eslint-disable-next-line import/no-default-export -- deprecated usage\nexport default GoogleAuthForm;\n","// eslint-disable-next-line import/no-default-export -- deprecated usage\nexport { default } from \"./GoogleAuthForm\";\n"],"names":[],"sourceRoot":""}